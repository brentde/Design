* {
    box-sizing: border-box;
    --background-color: lightgray;
    --border-size: 5px;
    --accent-color: hsla(200, 100%, 50%, 100%);
    --circle-size: -25px;
}

html, body {
    margin: 0;
}

.content {
    height: 100vh;
    width: 100vw;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    flex-direction: column;
}

.btn {
    background: none;
    border: none;
    outline: none;
    background-color: var(--background-color);
    font-size: 20px;
    padding: 20px;
    position: relative;
    cursor: pointer;
}

/* Border pop */

.btn.border-pop:before {
    content: '';
    position: absolute;
    top: 0; 
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    border: var(--border-size) solid var(--background-color);
    transition: top, left ,right, bottom, 100ms ease-in-out;
}

.btn.border-pop:hover:before,
.btn.border-pop:focus:before {
    top: calc(var(--border-size) * -2);
    left: calc(var(--border-size) * -2);
    right: calc(var(--border-size) * -2);
    bottom: calc(var(--border-size) * -2);
} 

.btn.slide:before {
    content: '';
    position: absolute;
    top: 0; 
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    background-color: var(--accent-color);
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 300ms ease-in-out;
}


/* Slide */

.btn.slide {
    transition: color 300ms ease-in-out;
    z-index: 1;
}

.btn.slide:hover::before,
.btn.slide:focus::before {
    transform: scaleX(1);

}

.btn.slide:hover,
.btn.slide:focus {
    color: white;
}

/* Circle */

.btn.circle::before {
    /* Set before element to size of button */
    content: '';
    position: absolute;
    top: var(--circle-size);
    left: var(--circle-size);
    right: var(--circle-size);
    bottom: var(--circle-size);

    /* Hide element behind button */
    z-index: -1;

    /* Make a circle */
    border-radius: 50%;

    /* Set background color to button color */
    background-color: var(--background-color);

    /* Because z-index of button is 1, pseduo element color
    currently overlaps */

    /* Make 1.5 times bigger than button */
    transform: scale(1.5); 
    
    /* Set transition styles */
    transition: transform 500ms ease-in-out;
}

.btn.circle:hover::before,
.btn.circle:focus::before {

    /* Shrink pseudo element to 0 */
   transform: scale(0);
}   

.btn.circle {
    z-index: 1;
    transition: color 500ms ease-in-out;
    background-color: var(--accent-color);
    overflow: hidden;
}

.btn.circle:hover,
.btn.circle:focus {
    color: white;
}

/* Underline */

.btn.underline::before {
    content: '';
    position: absolute;
    bottom: 0;
    right: 0;
    left: 0;
    height: var(--border-size);
    background-color: var(--accent-color);
    z-index: -1;
    transform: scaleX(0);
    transition: transform 500ms ease-in-out;
    transform-origin: left;
}

.btn.underline:hover::before,
.btn.underline:focus::before {
    transform: scaleX(1);
}

.btn.underline {
    z-index: 1;
    transition: color 500ms ease-in-out;
}

.btn.underline:hover,
.btn.underline:focus {
    color: white;
}